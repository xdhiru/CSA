<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Machine [
<!ELEMENT Machine (PunctChar*, Field*, FileChannel*, Register*, RegisterArray*, ConditionBit*, RAM*, Set*, Test*, Increment*, Shift*, Logical*, Arithmetic*, Branch*, TransferRtoR*, TransferRtoA*, TransferAtoR*, Decode*, SetCondBit*, IO*, MemoryAccess*, End, Comment*, EQU*, FetchSequence, MachineInstruction*, HighlightingInfo?, LoadingInfo?, IndexingInfo?, ProgramCounterInfo?, ModuleWindowsInfo?) >
<!ATTLIST Machine name CDATA "unnamed">
<!ELEMENT PunctChar EMPTY>
<!ATTLIST PunctChar char CDATA #REQUIRED use  (symbol|token|label|comment|pseudo|illegal) #REQUIRED>
<!ELEMENT Field (FieldValue*)>
<!ATTLIST Field name CDATA #REQUIRED type  (required|optional|ignored) #REQUIRED numBits CDATA #REQUIRED relativity (absolute|pcRelativePreIncr|pcRelativePostIncr) #REQUIRED defaultValue CDATA #REQUIRED signed (true|false) #REQUIRED id ID #REQUIRED>
<!ELEMENT FieldValue EMPTY>
<!ATTLIST FieldValue name CDATA #REQUIRED value CDATA #REQUIRED>
<!ELEMENT FileChannel EMPTY>
<!ATTLIST FileChannel file CDATA #REQUIRED id CDATA #REQUIRED>
<!ELEMENT Register EMPTY>
<!ATTLIST Register name CDATA #REQUIRED width CDATA #REQUIRED initialValue CDATA #REQUIRED readOnly (true|false) "false" id ID #REQUIRED>
<!ELEMENT RegisterArray (Register+)>
<!ATTLIST RegisterArray name CDATA #REQUIRED width CDATA #REQUIRED length CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT ConditionBit EMPTY>
<!ATTLIST ConditionBit name CDATA #REQUIRED bit CDATA #REQUIRED register IDREF #REQUIRED halt (true|false) "false" id ID #REQUIRED>
<!ELEMENT RAM EMPTY>
<!ATTLIST RAM name CDATA #REQUIRED length CDATA #REQUIRED id ID #REQUIRED cellSize CDATA "8">
<!ELEMENT Increment EMPTY>
<!ATTLIST Increment name CDATA #REQUIRED register IDREF #REQUIRED overflowBit IDREF #IMPLIED carryBit IDREF #IMPLIED delta CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Arithmetic EMPTY>
<!ATTLIST Arithmetic name CDATA #REQUIRED type (ADD|SUBTRACT|MULTIPLY|DIVIDE) #REQUIRED source1 IDREF #REQUIRED source2 IDREF #REQUIRED destination IDREF #REQUIRED overflowBit IDREF #IMPLIED  carryBit IDREF #IMPLIED  id ID #REQUIRED>
<!ELEMENT TransferRtoR EMPTY>
<!ATTLIST TransferRtoR name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT TransferRtoA EMPTY>
<!ATTLIST TransferRtoA name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED index IDREF #REQUIRED indexStart CDATA #IMPLIED indexNumBits CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT TransferAtoR EMPTY>
<!ATTLIST TransferAtoR name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED index IDREF #REQUIRED indexStart CDATA #IMPLIED indexNumBits CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT Shift EMPTY>
<!ATTLIST Shift name CDATA #REQUIRED source IDREF #REQUIRED destination IDREF #REQUIRED type (logical | arithmetic | cyclic) #REQUIRED direction (right | left) #REQUIRED distance CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Branch EMPTY>
<!ATTLIST Branch name CDATA #REQUIRED amount CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Logical EMPTY>
<!ATTLIST Logical name CDATA #REQUIRED source1 IDREF #REQUIRED source2 IDREF #REQUIRED destination IDREF #REQUIRED type (AND | OR | NAND | NOR | XOR | NOT) #REQUIRED id ID #REQUIRED>
<!ELEMENT Set EMPTY>
<!ATTLIST Set name CDATA #REQUIRED register IDREF #REQUIRED start CDATA #REQUIRED numBits CDATA #REQUIRED value CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Test EMPTY >
<!ATTLIST Test name CDATA #REQUIRED register IDREF #REQUIRED start CDATA #REQUIRED numBits CDATA #REQUIRED comparison (EQ | NE | LT | GT | LE | GE ) #REQUIRED value CDATA #REQUIRED omission CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Decode EMPTY >
<!ATTLIST Decode name CDATA #REQUIRED ir IDREF #REQUIRED id ID #REQUIRED>
<!ELEMENT IO EMPTY >
<!ATTLIST IO name CDATA #REQUIRED direction (input | output) #REQUIRED type (integer | ascii | unicode) #REQUIRED buffer IDREF #REQUIRED connection CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT MemoryAccess EMPTY >
<!ATTLIST MemoryAccess name CDATA #REQUIRED direction (read | write ) #REQUIRED memory IDREF #REQUIRED data IDREF #REQUIRED address IDREF #REQUIRED id ID #REQUIRED>
<!ELEMENT SetCondBit EMPTY >
<!ATTLIST SetCondBit name CDATA #REQUIRED bit IDREF #REQUIRED value (0 | 1) #REQUIRED id ID #REQUIRED>
<!ELEMENT End EMPTY>
<!ATTLIST End id ID #REQUIRED>
<!ELEMENT Comment EMPTY>
<!ATTLIST Comment name CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Microinstruction EMPTY>
<!ATTLIST Microinstruction microRef IDREF #REQUIRED>
<!ELEMENT MachineInstruction (Microinstruction*)>
<!ATTLIST MachineInstruction name CDATA #REQUIRED opcode CDATA #REQUIRED instructionFormat CDATA #REQUIRED assemblyFormat CDATA #REQUIRED instructionColors CDATA #REQUIRED assemblyColors CDATA #REQUIRED>
<!ELEMENT FetchSequence (Microinstruction*) >
<!ELEMENT EQU EMPTY>
<!ATTLIST EQU name CDATA #REQUIRED value CDATA #REQUIRED>
<!ELEMENT HighlightingInfo (RegisterRAMPair*)>
<!ELEMENT RegisterRAMPair EMPTY>
<!ATTLIST RegisterRAMPair register IDREF #REQUIRED ram IDREF #REQUIRED dynamic (true|false) #REQUIRED>
<!ELEMENT LoadingInfo EMPTY>
<!ATTLIST LoadingInfo ram IDREF #IMPLIED startingAddress CDATA "0">
<!ELEMENT IndexingInfo EMPTY>
<!ATTLIST IndexingInfo indexFromRight CDATA "false">
<!ELEMENT ProgramCounterInfo EMPTY>
<!ATTLIST ProgramCounterInfo programCounter IDREF #REQUIRED>
<!ELEMENT ModuleWindowsInfo ((RegisterWindowInfo | RegisterArrayWindowInfo | RAMWindowInfo)*) >
<!ELEMENT RegisterWindowInfo EMPTY>
<!ATTLIST RegisterWindowInfo top CDATA "50" left CDATA "50" width CDATA "300" height CDATA "150" base (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode)  "Decimal">
<!ELEMENT RegisterArrayWindowInfo EMPTY>
<!ATTLIST RegisterArrayWindowInfo array IDREF #REQUIRED top CDATA "50" left CDATA "50" width CDATA "300" height CDATA "150" base (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode) "Decimal">
<!ELEMENT RAMWindowInfo EMPTY>
<!ATTLIST RAMWindowInfo ram IDREF #REQUIRED cellSize CDATA "1" top CDATA "50" left CDATA "50" width CDATA "450" height CDATA "450" contentsbase (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode) "Decimal" addressbase (Decimal|Binary|Hexadecimal) "Decimal">
]>

<Machine name="dhirendra final machine" >
	<!--............. Punctuation Options .............-->
	<PunctChar char="!" use="symbol" />
	<PunctChar char="#" use="symbol" />
	<PunctChar char="$" use="symbol" />
	<PunctChar char="%" use="symbol" />
	<PunctChar char="&amp;" use="symbol" />
	<PunctChar char="^" use="symbol" />
	<PunctChar char="_" use="symbol" />
	<PunctChar char="`" use="symbol" />
	<PunctChar char="*" use="symbol" />
	<PunctChar char="?" use="symbol" />
	<PunctChar char="@" use="symbol" />
	<PunctChar char="~" use="symbol" />
	<PunctChar char="+" use="symbol" />
	<PunctChar char="-" use="symbol" />
	<PunctChar char="(" use="token" />
	<PunctChar char=")" use="token" />
	<PunctChar char="," use="token" />
	<PunctChar char="/" use="token" />
	<PunctChar char="=" use="token" />
	<PunctChar char="[" use="token" />
	<PunctChar char="\" use="token" />
	<PunctChar char="]" use="token" />
	<PunctChar char="{" use="token" />
	<PunctChar char="|" use="token" />
	<PunctChar char="}" use="token" />
	<PunctChar char="." use="pseudo" />
	<PunctChar char=":" use="label" />
	<PunctChar char=";" use="comment" />

	<!--......... machine instruction fields ............-->
	<Field name="OP16" type="required" numBits="16" relativity="absolute" signed="true" defaultValue="0" id="model.Field17f782a3">
	</Field>
	<Field name="ADDRESS" type="required" numBits="12" relativity="absolute" signed="true" defaultValue="0" id="model.Field747a2618">
	</Field>
	<Field name="OP4" type="required" numBits="4" relativity="absolute" signed="true" defaultValue="0" id="model.Field7fefe346">
	</Field>

	<!--............. FileChannels .................-->
	<!-- none -->

	<!--............. registers .....................-->
	<Register name="AC" width="16" initialValue="0" readOnly="false" id="model.module.Register2336eb9" />
	<Register name="AR" width="12" initialValue="0" readOnly="false" id="model.module.Register613a2469" />
	<Register name="DR" width="16" initialValue="0" readOnly="false" id="model.module.Register5d2625e4" />
	<Register name="E" width="1" initialValue="0" readOnly="false" id="model.module.Register4e4f817f" />
	<Register name="I" width="1" initialValue="0" readOnly="false" id="model.module.Register571078a9" />
	<Register name="INPR" width="8" initialValue="0" readOnly="false" id="model.module.Register67b9174e" />
	<Register name="IR" width="16" initialValue="0" readOnly="false" id="model.module.Registerbdc1758" />
	<Register name="OUTR" width="8" initialValue="0" readOnly="false" id="model.module.Register392a2b25" />
	<Register name="PC" width="12" initialValue="0" readOnly="false" id="model.module.Register6dabd999" />
	<Register name="S" width="1" initialValue="0" readOnly="false" id="model.module.Register4207a005" />
	<Register name="TR" width="16" initialValue="0" readOnly="false" id="model.module.Register298a19ca" />

	<!--............. register arrays ...............-->
	<!-- none -->

	<!--............. condition bits ................-->
	<ConditionBit name="S" bit="0" register="model.module.Register4207a005" halt="true" id="model.module.ConditionBit41117cdd" />

	<!--............. rams ..........................-->
	<RAM name="M" length="4096" cellSize="16" id="model.module.RAM72c50277" />

	<!--............. set ...........................-->
	<Set name="AC&lt;-0" register="model.module.Register2336eb9" start="0" numBits="16" value="0" id="model.microinstruction.CpusimSet76510903" />
	<Set name="E&lt;-0" register="model.module.Register4e4f817f" start="0" numBits="1" value="0" id="model.microinstruction.CpusimSet236f455d" />
	<Set name="S&lt;-1" register="model.module.Register4207a005" start="0" numBits="1" value="1" id="model.microinstruction.CpusimSet316fa652" />

	<!--............. test ..........................-->
	<Test name="if(AC(15)!=0 then omit 1" register="model.module.Register2336eb9" start="15" numBits="1" comparison="NE" value="0" omission="1" id="model.microinstruction.Test4cdae5f2" />
	<Test name="if(Ac!=0)then omit 1" register="model.module.Register2336eb9" start="0" numBits="16" comparison="NE" value="0" omission="1" id="model.microinstruction.Test4b970d" />
	<Test name="if(Ac(15)!=1 then omit 1" register="model.module.Register2336eb9" start="15" numBits="1" comparison="NE" value="1" omission="1" id="model.microinstruction.Test635f0a32" />
	<Test name="if(DR!=0" register="model.module.Register2336eb9" start="0" numBits="1" comparison="EQ" value="0" omission="0" id="model.microinstruction.Test464162ac" />
	<Test name="if(E!=0)then OMIT 1" register="model.module.Register4e4f817f" start="0" numBits="1" comparison="NE" value="0" omission="1" id="model.microinstruction.Test5dafeae3" />

	<!--............. increment .....................-->
	<Increment name="AC&lt;-AC+1" register="model.module.Register2336eb9" delta="1" id="model.microinstruction.Increment100eda4" />
	<Increment name="DR&lt;-DR+1" register="model.module.Register2336eb9" delta="1" id="model.microinstruction.Increment1a95792c" />
	<Increment name="PC&lt;-PC+1" register="model.module.Register6dabd999" delta="1" id="model.microinstruction.Increment578c3cd0" />

	<!--............. shift .........................-->
	<Shift name="AC&lt;-SHL AC" type="logical" source="model.module.Register2336eb9" destination="model.module.Register2336eb9" direction="left" distance="1" id="model.microinstruction.Shift4250c9a1" />
	<Shift name="AC&lt;-SHR AC" type="logical" source="model.module.Register2336eb9" destination="model.module.Register2336eb9" direction="right" distance="1" id="model.microinstruction.Shift748c0787" />

	<!--............. logical .......................-->
	<Logical name="AC&lt;-AC'" type="NOT" source1="model.module.Register2336eb9" source2="model.module.Register2336eb9" destination="model.module.Register2336eb9" id="model.microinstruction.Logical6b13ede5" />
	<Logical name="AC&lt;-AC^DR" type="AND" source1="model.module.Register2336eb9" source2="model.module.Register5d2625e4" destination="model.module.Register2336eb9" id="model.microinstruction.Logical7fb76f3f" />
	<Logical name="AC&lt;-AC|DR" type="OR" source1="model.module.Register2336eb9" source2="model.module.Register5d2625e4" destination="model.module.Register2336eb9" id="model.microinstruction.Logical3310c981" />
	<Logical name="E&lt;-E'" type="NOT" source1="model.module.Register4e4f817f" source2="model.module.Register4e4f817f" destination="model.module.Register4e4f817f" id="model.microinstruction.Logical4d8762db" />

	<!--............. arithmetic ....................-->
	<Arithmetic name="AC&lt;-DR+AC" type="ADD" source1="model.module.Register5d2625e4" source2="model.module.Register2336eb9" destination="model.module.Register2336eb9" id="model.microinstruction.Arithmetic390fc24b" />

	<!--............. branch ........................-->
	<!-- none -->

	<!--............. transferRtoR ..................-->
	<TransferRtoR name="AC(0)&lt;-E" source="model.module.Register4e4f817f" srcStartBit="0" dest="model.module.Register2336eb9" destStartBit="0" numBits="1" id="model.microinstruction.TransferRtoR3e0b2c4e" />
	<TransferRtoR name="AC(15)&lt;-E" source="model.module.Register4e4f817f" srcStartBit="0" dest="model.module.Register2336eb9" destStartBit="15" numBits="1" id="model.microinstruction.TransferRtoR7951ac5e" />
	<TransferRtoR name="AC&lt;-AR" source="model.module.Register613a2469" srcStartBit="0" dest="model.module.Register2336eb9" destStartBit="0" numBits="12" id="model.microinstruction.TransferRtoR2863cc3a" />
	<TransferRtoR name="AC&lt;-DR" source="model.module.Register5d2625e4" srcStartBit="0" dest="model.module.Register2336eb9" destStartBit="0" numBits="16" id="model.microinstruction.TransferRtoR564a1a" />
	<TransferRtoR name="AR&lt;-IR(0-11)" source="model.module.Registerbdc1758" srcStartBit="0" dest="model.module.Register613a2469" destStartBit="0" numBits="12" id="model.microinstruction.TransferRtoR67587f02" />
	<TransferRtoR name="AR&lt;-PC" source="model.module.Register6dabd999" srcStartBit="0" dest="model.module.Register613a2469" destStartBit="0" numBits="12" id="model.microinstruction.TransferRtoR139f1ceb" />
	<TransferRtoR name="E&lt;-AC(0)" source="model.module.Register2336eb9" srcStartBit="0" dest="model.module.Register4e4f817f" destStartBit="0" numBits="1" id="model.microinstruction.TransferRtoR252b10be" />
	<TransferRtoR name="E&lt;-AC(15)" source="model.module.Register2336eb9" srcStartBit="15" dest="model.module.Register4e4f817f" destStartBit="0" numBits="1" id="model.microinstruction.TransferRtoR179f889b" />
	<TransferRtoR name="PC&lt;-AR" source="model.module.Register613a2469" srcStartBit="0" dest="model.module.Register6dabd999" destStartBit="0" numBits="12" id="model.microinstruction.TransferRtoR339b5505" />

	<!--............. transferRtoA ..................-->
	<!-- none -->

	<!--............. transferAtoR ..................-->
	<!-- none -->

	<!--............. decode ........................-->
	<Decode name="DECODE IR" ir="model.module.Registerbdc1758" id="model.microinstruction.Decode4eeba5f6" />

	<!--............. set condition bit .............-->
	<!-- none -->

	<!--............. io ............................-->
	<IO name="INP" direction="input" type="integer" buffer="model.module.Register2336eb9" connection="[Console]" id="model.microinstruction.IO402f255c" />
	<IO name="OUT" direction="output" type="integer" buffer="model.module.Register2336eb9" connection="[Console]" id="model.microinstruction.IO53f8fcba" />

	<!--............. memory access .................-->
	<MemoryAccess name="AR&lt;-M[AR]" direction="read" memory="model.module.RAM72c50277" data="model.module.Register613a2469" address="model.module.Register613a2469" id="model.microinstruction.MemoryAccess7bf3afec" />
	<MemoryAccess name="DR&lt;-M[AR]" direction="read" memory="model.module.RAM72c50277" data="model.module.Register5d2625e4" address="model.module.Register613a2469" id="model.microinstruction.MemoryAccess2248bda6" />
	<MemoryAccess name="IR&lt;-M[AR]" direction="read" memory="model.module.RAM72c50277" data="model.module.Registerbdc1758" address="model.module.Register613a2469" id="model.microinstruction.MemoryAccess1b747976" />
	<MemoryAccess name="M[AR]&lt;-AC" direction="write" memory="model.module.RAM72c50277" data="model.module.Register2336eb9" address="model.module.Register613a2469" id="model.microinstruction.MemoryAccessffd4b8e" />
	<MemoryAccess name="M[AR]&lt;-DR" direction="write" memory="model.module.RAM72c50277" data="model.module.Register5d2625e4" address="model.module.Register613a2469" id="model.microinstruction.MemoryAccess69971952" />
	<MemoryAccess name="M[AR]&lt;-PC" direction="write" memory="model.module.RAM72c50277" data="model.module.Register6dabd999" address="model.module.Register613a2469" id="model.microinstruction.MemoryAccesse553c4b" />

	<!--............. end ...........................-->
	<End id="model.microinstruction.End36524b3e" />

	<!--............. comment ...........................-->
	<!-- none -->

	<!--............. global equs ..................-->
	<!-- none -->

	<!--............. fetch sequence ................-->
	<FetchSequence>
		<Microinstruction microRef="model.microinstruction.TransferRtoR139f1ceb" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess1b747976" />
		<Microinstruction microRef="model.microinstruction.Increment578c3cd0" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR67587f02" />
		<Microinstruction microRef="model.microinstruction.Decode4eeba5f6" />
	</FetchSequence>

	<!--............. machine instructions ..........-->

	<MachineInstruction name="SZE" opcode="7002" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#f3e1ec" assemblyColors="#f3e1ec" >
		<Microinstruction microRef="model.microinstruction.Test5dafeae3" />
		<Microinstruction microRef="model.microinstruction.Increment578c3cd0" />
		<Microinstruction microRef="model.microinstruction.End36524b3e" />
	</MachineInstruction>

	<MachineInstruction name="SPA" opcode="7010" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#af8281" assemblyColors="#af8281" >
		<Microinstruction microRef="model.microinstruction.Test4cdae5f2" />
		<Microinstruction microRef="model.microinstruction.Increment578c3cd0" />
		<Microinstruction microRef="model.microinstruction.End36524b3e" />
	</MachineInstruction>

	<MachineInstruction name="SZA" opcode="7004" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#9db5ea" assemblyColors="#9db5ea" >
		<Microinstruction microRef="model.microinstruction.Test4b970d" />
		<Microinstruction microRef="model.microinstruction.Increment578c3cd0" />
		<Microinstruction microRef="model.microinstruction.End36524b3e" />
	</MachineInstruction>

	<MachineInstruction name="SNA" opcode="7008" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#f9cede" assemblyColors="#f9cede" >
		<Microinstruction microRef="model.microinstruction.Test635f0a32" />
		<Microinstruction microRef="model.microinstruction.Increment578c3cd0" />
		<Microinstruction microRef="model.microinstruction.End36524b3e" />
	</MachineInstruction>

	<MachineInstruction name="OR" opcode="6" instructionFormat="OP4 ADDRESS" assemblyFormat="OP4 ADDRESS" instructionColors="#9bc0df #f6c7ef" assemblyColors="#9bc0df #f6c7ef" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess2248bda6" />
		<Microinstruction microRef="model.microinstruction.Logical3310c981" />
		<Microinstruction microRef="model.microinstruction.End36524b3e" />
	</MachineInstruction>

	<MachineInstruction name="OUT" opcode="f400" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#a0f5d5" assemblyColors="#a0f5d5" >
		<Microinstruction microRef="model.microinstruction.IO53f8fcba" />
		<Microinstruction microRef="model.microinstruction.End36524b3e" />
	</MachineInstruction>

	<MachineInstruction name="INP" opcode="f800" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#dcdcbc" assemblyColors="#dcdcbc" >
		<Microinstruction microRef="model.microinstruction.IO402f255c" />
		<Microinstruction microRef="model.microinstruction.End36524b3e" />
	</MachineInstruction>

	<MachineInstruction name="ISZ" opcode="e" instructionFormat="OP4 ADDRESS" assemblyFormat="OP4 ADDRESS" instructionColors="#98b292 #e6a9af" assemblyColors="#98b292 #e6a9af" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess2248bda6" />
		<Microinstruction microRef="model.microinstruction.Increment1a95792c" />
		<Microinstruction microRef="model.microinstruction.Test464162ac" />
		<Microinstruction microRef="model.microinstruction.Increment578c3cd0" />
		<Microinstruction microRef="model.microinstruction.End36524b3e" />
	</MachineInstruction>

	<MachineInstruction name="HLT" opcode="7001" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#c1aba4" assemblyColors="#c1aba4" >
		<Microinstruction microRef="model.microinstruction.CpusimSet316fa652" />
		<Microinstruction microRef="model.microinstruction.End36524b3e" />
	</MachineInstruction>

	<MachineInstruction name="INC" opcode="7020" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#dac89f" assemblyColors="#dac89f" >
		<Microinstruction microRef="model.microinstruction.Increment100eda4" />
		<Microinstruction microRef="model.microinstruction.End36524b3e" />
	</MachineInstruction>

	<MachineInstruction name="CIL" opcode="7040" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#c080c2" assemblyColors="#c080c2" >
		<Microinstruction microRef="model.microinstruction.Shift4250c9a1" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR3e0b2c4e" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR179f889b" />
		<Microinstruction microRef="model.microinstruction.End36524b3e" />
	</MachineInstruction>

	<MachineInstruction name="CIR" opcode="7080" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#8ba796" assemblyColors="#8ba796" >
		<Microinstruction microRef="model.microinstruction.Shift748c0787" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR7951ac5e" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR252b10be" />
		<Microinstruction microRef="model.microinstruction.End36524b3e" />
	</MachineInstruction>

	<MachineInstruction name="CME" opcode="7100" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#d3c5ae" assemblyColors="#d3c5ae" >
		<Microinstruction microRef="model.microinstruction.Logical4d8762db" />
		<Microinstruction microRef="model.microinstruction.End36524b3e" />
	</MachineInstruction>

	<MachineInstruction name="CMA" opcode="7200" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#abd3e0" assemblyColors="#abd3e0" >
		<Microinstruction microRef="model.microinstruction.Logical6b13ede5" />
		<Microinstruction microRef="model.microinstruction.End36524b3e" />
	</MachineInstruction>

	<MachineInstruction name="CLE" opcode="7400" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#8f94b8" assemblyColors="#8f94b8" >
		<Microinstruction microRef="model.microinstruction.CpusimSet236f455d" />
		<Microinstruction microRef="model.microinstruction.End36524b3e" />
	</MachineInstruction>

	<MachineInstruction name="CLA" opcode="7800" instructionFormat="OP16" assemblyFormat="OP16" instructionColors="#fdf4ae" assemblyColors="#fdf4ae" >
		<Microinstruction microRef="model.microinstruction.CpusimSet76510903" />
		<Microinstruction microRef="model.microinstruction.End36524b3e" />
	</MachineInstruction>

	<MachineInstruction name="BSA_I" opcode="d" instructionFormat="OP4 OP16" assemblyFormat="OP4 OP16" instructionColors="#fbc9c0 #b3fec4" assemblyColors="#fbc9c0 #b3fec4" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess7bf3afec" />
		<Microinstruction microRef="model.microinstruction.MemoryAccesse553c4b" />
		<Microinstruction microRef="model.microinstruction.Increment578c3cd0" />
		<Microinstruction microRef="model.microinstruction.End36524b3e" />
	</MachineInstruction>

	<MachineInstruction name="BSA" opcode="5" instructionFormat="OP4 ADDRESS" assemblyFormat="OP4 ADDRESS" instructionColors="#88a8ad #fbfa96" assemblyColors="#88a8ad #fbfa96" >
		<Microinstruction microRef="model.microinstruction.MemoryAccesse553c4b" />
		<Microinstruction microRef="model.microinstruction.Increment578c3cd0" />
		<Microinstruction microRef="model.microinstruction.End36524b3e" />
	</MachineInstruction>

	<MachineInstruction name="BUN_I" opcode="c" instructionFormat="OP4 ADDRESS" assemblyFormat="OP4 ADDRESS" instructionColors="#c5f3fe #f58c9b" assemblyColors="#c5f3fe #f58c9b" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess7bf3afec" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR339b5505" />
		<Microinstruction microRef="model.microinstruction.End36524b3e" />
	</MachineInstruction>

	<MachineInstruction name="BUN" opcode="4" instructionFormat="OP4 ADDRESS" assemblyFormat="OP4 ADDRESS" instructionColors="#c5f3fe #f58c9b" assemblyColors="#c5f3fe #f58c9b" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR339b5505" />
		<Microinstruction microRef="model.microinstruction.End36524b3e" />
	</MachineInstruction>

	<MachineInstruction name="STA_I" opcode="b" instructionFormat="OP4 ADDRESS" assemblyFormat="OP4 ADDRESS" instructionColors="#c7bcd9 #f197c5" assemblyColors="#c7bcd9 #f197c5" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess7bf3afec" />
		<Microinstruction microRef="model.microinstruction.MemoryAccessffd4b8e" />
		<Microinstruction microRef="model.microinstruction.End36524b3e" />
	</MachineInstruction>

	<MachineInstruction name="STA" opcode="3" instructionFormat="OP4 ADDRESS" assemblyFormat="OP4 ADDRESS" instructionColors="#c7bcd9 #f197c5" assemblyColors="#c7bcd9 #f197c5" >
		<Microinstruction microRef="model.microinstruction.MemoryAccessffd4b8e" />
		<Microinstruction microRef="model.microinstruction.End36524b3e" />
	</MachineInstruction>

	<MachineInstruction name="LDA_I" opcode="a" instructionFormat="OP4 ADDRESS" assemblyFormat="OP4 ADDRESS" instructionColors="#c6f8a2 #a8c1d7" assemblyColors="#c6f8a2 #a8c1d7" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess7bf3afec" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess2248bda6" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR564a1a" />
		<Microinstruction microRef="model.microinstruction.End36524b3e" />
	</MachineInstruction>

	<MachineInstruction name="LDA" opcode="2" instructionFormat="OP4 ADDRESS" assemblyFormat="OP4 ADDRESS" instructionColors="#c6f8a2 #a8c1d7" assemblyColors="#c6f8a2 #a8c1d7" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess2248bda6" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR564a1a" />
		<Microinstruction microRef="model.microinstruction.End36524b3e" />
	</MachineInstruction>

	<MachineInstruction name="ADD_I" opcode="9" instructionFormat="OP4 ADDRESS" assemblyFormat="OP4 ADDRESS" instructionColors="#f4b486 #c7aff2" assemblyColors="#f4b486 #c7aff2" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess7bf3afec" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess2248bda6" />
		<Microinstruction microRef="model.microinstruction.Arithmetic390fc24b" />
		<Microinstruction microRef="model.microinstruction.End36524b3e" />
	</MachineInstruction>

	<MachineInstruction name="ADD" opcode="1" instructionFormat="OP4 ADDRESS" assemblyFormat="OP4 ADDRESS" instructionColors="#f4b486 #c7aff2" assemblyColors="#f4b486 #c7aff2" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess2248bda6" />
		<Microinstruction microRef="model.microinstruction.Arithmetic390fc24b" />
		<Microinstruction microRef="model.microinstruction.End36524b3e" />
	</MachineInstruction>

	<MachineInstruction name="AND_I" opcode="8" instructionFormat="OP4 ADDRESS" assemblyFormat="OP4 ADDRESS" instructionColors="#9ce0cf #b1b3b4" assemblyColors="#9ce0cf #b1b3b4" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess7bf3afec" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess2248bda6" />
		<Microinstruction microRef="model.microinstruction.Logical7fb76f3f" />
		<Microinstruction microRef="model.microinstruction.End36524b3e" />
	</MachineInstruction>

	<MachineInstruction name="AND" opcode="0" instructionFormat="OP4 ADDRESS" assemblyFormat="OP4 ADDRESS" instructionColors="#9ce0cf #b1b3b4" assemblyColors="#9ce0cf #b1b3b4" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess2248bda6" />
		<Microinstruction microRef="model.microinstruction.Logical7fb76f3f" />
		<Microinstruction microRef="model.microinstruction.End36524b3e" />
	</MachineInstruction>

	<!--............. highlighting info .............-->
	<HighlightingInfo>
	</HighlightingInfo>

	<!--............. loading info ..................-->
	<LoadingInfo ram="model.module.RAM72c50277" startingAddress="0" />

	<!--............. indexing info ............-->
	<IndexingInfo indexFromRight="true" />

	<!--............. program counter info ..................-->

</Machine>
